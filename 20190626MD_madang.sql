SELECT * FROM TABS;

SELECT * FROM CUSTOMER;

SELECT * FROM ORDERS;

--두 개의 테이블 조인
SELECT * FROM CUSTOMER, ORDERS;

--동등조인=등가조인=INNER JOIN;
--두 개의 테이블을 통합하는 기준이 되는 열(여기서, CUSTID)의 값이 서로 등가이어야 하기 때문에 등가조인이라고 함.
--여기서 CUSTID가 서로 같은 값이 있고 아닌 값이 있음. 아닌 값은 중요하지 않으므로 제외.

SELECT *
FROM CUSTOMER, ORDERS
WHERE CUSTOMER.CUSTID = ORDERS.CUSTID;


SELECT NAME, SALEPRICE
FROM CUSTOMER, ORDERS
WHERE CUSTOMER.CUSTID = ORDERS.CUSTID;

SELECT NAME, SUM(SALEPRICE)
FROM CUSTOMER, ORDERS
WHERE CUSTOMER.CUSTID = ORDERS.CUSTID --등가 조인의 기준이 되는 열
GROUP BY CUSTOMER.NAME --NAME 별로 묶음
ORDER BY CUSTOMER.NAME; --오름차순 정렬

--3개의 테이블 조인
SELECT CUSTOMER.NAME, BOOK.BOOKNAME
FROM CUSTOMER, ORDERS, BOOK
WHERE CUSTOMER.CUSTID = ORDERS.CUSTID AND ORDERS.BOOKID = BOOK.BOOKID;

SELECT CUSTOMER.NAME, BOOK.BOOKNAME
FROM CUSTOMER, ORDERS, BOOK
WHERE CUSTOMER.CUSTID = ORDERS.CUSTID AND ORDERS.BOOKID = BOOK.BOOKID AND BOOK.PRICE = 20000;


--외부 조인=OUTER JOIN
SELECT CUSTOMER.NAME
FROM CUSTOMER, ORDERS
WHERE CUSTOMER.CUSTID = ORDERS.CUSTID;
--여기서는 '박세리'가 출력되지 않으므로, 출력되게 하는 것이 OUTER JOIN이라 함

SELECT CUSTOMER.NAME, ORDERS.SALEPRICE



FROM CUSTOMER LEFT OUTER JOIN  ORDERS ON CUSTOMER.CUSTID = ORDERS.CUSTID;
--여기서 OUTER는 생략 가능함

SELECT CUSTOMER.NAME, ORDERS.SALEPRICE
FROM CUSTOMER RIGHT OUTER JOIN  ORDERS ON CUSTOMER.CUSTID = ORDERS.CUSTID;

SELECT CUSTOMER.NAME, ORDERS.SALEPRICE
FROM CUSTOMER FULL OUTER JOIN  ORDERS ON CUSTOMER.CUSTID = ORDERS.CUSTID;